def finding(s, p, n, m):

	if n < 0 and m < 0:
		return 1
	if m < 0:
		return 0
	if n < 0:

		while m >= 0:
			if p[m] != '*':
				return 0
			m -= 1
		return 1
	if dp[n][m] == -1:
		if p[m] == '*':
			dp[n][m] = finding(s, p, n - 1, m) or finding(s, p, n, m - 1)
			return dp[n][m]
		else:
			if p[m] != s[n] and p[m] != '?':
				dp[n][m] = 0
				return dp[n][m]
			else:
				dp[n][m] = finding(s, p, n - 1, m - 1)
				return dp[n][m]
	return dp[n][m]
def isMatch(s, p):
	global dp
	dp = []
	for i in range(len(s) + 1):
		dp.append([-1] * (len(p) + 1))
	dp[len(s)][len(p)] = finding(s, p, len(s) - 1, len(p) - 1)
	return dp[len(s)][len(p)]
def main():
	s = "aa"
	p = "a"


	if isMatch(s, p):
		print("true")
	else:
		print("false")

if _name_ == "_main_":
	main()
